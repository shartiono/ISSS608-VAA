---
title: "Hands-on Exercise 02"
author: "Sariyanti Hartiono"
date-modified: last-modified
format: html
---

# Beyond ggplot2 Fundamentals

## 2.1 Overview

Several **ggplot2 extensions** are introduced in this section to enhance the elegance and effectiveness of statistical graphics, by:

-   Using **ggrepel** to control annotation placement

-   Applying **ggthemes** and **hrbrthemes** for publication-quality visuals

-   Combining plots using the **patchwork** package to create composite figures

## 2.2 Getting started

### 2.2.1 Installing the required libraries

In addition to tidyverse, four R packages will be used in this exercise:

-   ggrepel

-   ggthemes

-   hrbrthemes

-   patchwork

Code chunk below are used to check if these packages have been installed and also will load them onto the R environment.

```{r}
pacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes,
               tidyverse) 
```

### 2.2.2 Importing the data

The code chunk below imports exam_data.csv into R environment by using [`read_csv()`](https://readr.tidyverse.org/reference/read_delim.html) function of [**readr**](https://readr.tidyverse.org/) package, which is one of the tidyversepackage.

There are a total of seven attributes in the exam_data tibble data frame, with the following types:

-   The categorical attributes are: ID, CLASS, GENDER and RACE.

-   The continuous attributes are: MATHS, ENGLISH and SCIENCE.

```{r, message = FALSE}
exam_data <- read_csv("data/Exam_data.csv")
```

## 2.3 Beyond ggplot2 Annotation: ggrepel {.tabset}

One of the challenges of plotting statistical graph is annotation especially when dealing with large data points, as shown in the example below:

::: panel-tabset
### The Plot

```{r, echo=FALSE, message=FALSE, warning=FALSE}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

### The Code

```{r, eval=FALSE, message=FALSE, warning=FALSE}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

**ggrepel** is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text, by replacing geom_text() with geom_text_repel() and geom_label() with geom_label_repel.

The new chart looks tidier with better visualization as shown below after applying the ggrepel function.

::: panel-tabset
### The Plot

```{r, echo=FALSE, message=FALSE, warning=FALSE}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

### The Code

```{r, eval=FALSE, message=FALSE, warning=FALSE}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

## 2.4 Beyond ggplot2 Annotation: Themes

ggplot2 has eight built-in themes:

-   theme_gray(),

-   theme_bw(),

-   theme_classic(),

-   theme_dark(),

-   theme_light(),

-   theme_linedraw(),

-   theme_minimal(),

-   theme_void()

Refer to this [link](https://ggplot2.tidyverse.org/reference/index.html#themes) to learn more about ggplot2 Themes.

The plot and code below is using theme_light() to see the distribution of Math Score

::: panel-tabset
### The Plot

```{r, echo=FALSE, message=FALSE, warning=FALSE}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_light() +
  ggtitle("Distribution of Math scores") 
```

### The Code

```{r, eval=FALSE, message=FALSE, warning=FALSE}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_light() +
  ggtitle("Distribution of Math scores") 
```
:::

### 2.4.1 Working with ggtheme package

**ggthemes** provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, The Wall Street Journal, and 'Solid', among others.

In the example below, The Wall Stree Journal theme is used.

::: panel-tabset
### The Plot

```{r, echo=FALSE, message=FALSE, warning=FALSE}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Math scores ") +
  theme_wsj()
```

### The Code

```{r, eval=FALSE, message=FALSE, warning=FALSE}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Math scores ") +
  theme_wsj()
```
:::

Refer to [this vignette](#0) to learn other theme package available.

### 2.4.2 Working with hrbthems package

**hrbrthemes** package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used, as shown in the plot and code below.

::: panel-tabset
### The Plot

```{r, echo=FALSE, message=FALSE, warning=FALSE}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```

### The Code

```{r, eval=FALSE, message=FALSE, warning=FALSE}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```
:::

The second objective centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used.

Consult [this vignette](https://hrbrmstr.github.io/hrbrthemes/articles/why_hrbrthemes.html) to learn more.

::: panel-tabset
### The Plot

```{r, echo=FALSE, message=FALSE, warning=FALSE}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")
```

### The Code

```{r, eval=FALSE, message=FALSE, warning=FALSE}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")
```
:::

::: {.callout-tip title="Points to note from the plot and code chunk above:"}
-   `axis_title_size` argument is used to increase the font size of the axis title to 18,
-   `base_size` argument is used to increase the default axis label to 15, and
-   `grid` argument is used to remove the x-axis grid lines.
:::

## 2.5 Beyond Single Graph

It is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions that provide functions to compose figure with multiple graphs. In this section, we will create composite plot by combining multiple graphs. First, let us create three statistical graphics by using the code chunk below.

1st Plot To show the Math Scores distribution:

::: panel-tabset
### The Plot

```{r}
p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")
p1
```

### The Code

```{r, eval=FALSE, message=FALSE, warning=FALSE}
p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")
```
:::

2nd Plot to show the English Score Distribution:

::: panel-tabset
### The Plot

```{r, echo=FALSE, message=FALSE, warning=FALSE}
p2<-ggplot(data=exam_data, 
           aes(x = ENGLISH)) +
    geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
    coord_cartesian(xlim=c(0,100)) +
    ggtitle("Distribution of English scores")
p2
```

### The Code

```{r, eval=FALSE, message=FALSE, warning=FALSE}
p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")
```
:::

Lastly, we will draw a scatterplot for English score versus Maths score as shown below

The Plot to show the Math and English Score Distribution:

::: panel-tabset
### The Plot

```{r, echo=FALSE, message=FALSE, warning=FALSE}
p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
p3

```

### The Code

```{r, eval=FALSE, message=FALSE, warning=FALSE}
p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

### 2.5.1 Creating Composite Graphics: pathwork methods

There are several ggplot2 extension’s functions that support the needs to prepare composite figure by combining several graphs such as [`grid.arrange()`](https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html) of **gridExtra** package and [`plot_grid()`](https://wilkelab.org/cowplot/reference/plot_grid.html) of [**cowplot**](https://wilkelab.org/cowplot/index.html) package. In this section, we will go through ggplot2 extension called [**patchwork**](https://patchwork.data-imaginist.com/) which is specially designed for combining separate ggplot2 graphs into a single figure.

Patchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:

-   Two-Column Layout using the Plus Sign +.

-   Parenthesis () to create a subplot group.

-   Two-Row Layout using the Division Sign `/`

### 2.5.2 Combining two ggplot2 graphs

Figure below shows a composite of two histograms created using patchwork.

```{r, message=FALSE, warning=FALSE}
p1 + p2

```

### 2.5.3 Combining three ggplot2 graphs

We can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:

-   “/” operator to stack two ggplot2 graphs,

-   “\|” operator to place the plots beside each other,

-   “()” operator the define the sequence of the plotting.

```{r, message=FALSE, warning=FALSE}
(p1 / p2) | p3

```

To learn more, refer to [Plot Assembly](https://patchwork.data-imaginist.com/articles/guides/assembly.html).

### 2.5.4 Creating a composite figure with tag

In order to identify subplots in text, **patchwork** also provides auto-tagging capabilities as shown in the figure below.

```{r, message=FALSE, warning=FALSE}
((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')

```

### 2.5.5 Creating figure with insert

Beside providing functions to place plots next to each other based on the provided layout. With [`inset_element()`](https://patchwork.data-imaginist.com/reference/inset_element.html) of **patchwork**, we can place one or several plots or graphic elements freely on top or below another plot, as shown below:

```{r, message=FALSE, warning=FALSE}
p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)
```

### 2.5.6 Creating a composite figure by using patchwork and ggtheme

Figure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.

```{r, message=FALSE, warning=FALSE}
patchwork <- (p1 / p2) | p3
patchwork & theme_economist()
```

## 2.6 Reference

-   [Patchwork R package goes nerd viral](https://www.littlemissdata.com/blog/patchwork)

-   [ggrepel](https://ggrepel.slowkow.com/)

-   [ggthemes](https://ggplot2.tidyverse.org/reference/ggtheme.html)

-   [hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/)

-   [ggplot tips: Arranging plots](https://albert-rapp.de/post/2021-10-28-extend-plot-variety/)

-   [ggplot2 Theme Elements Demonstration](https://henrywang.nl/ggplot2-theme-elements-demonstration/)

-   [ggplot2 Theme Elements Reference Sheet](https://isabella-b.com/blog/ggplot2-theme-elements-reference/)
