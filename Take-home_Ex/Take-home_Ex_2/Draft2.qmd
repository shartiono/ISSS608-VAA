---
title: "Draft2"
format: html
---

# Loading

```{r}
#| message: false
#| results: 'hide'
#| code-fold: true
#| code-summary: "Show the code"
pacman::p_load(
  tidyverse,     
  jsonlite,       
  tidygraph,      
  ggraph,         
  visNetwork,     
  SmartEDA,      
  lubridate,   
  ggforce,        
  plotly,
  skimr,
  ggrepel
)
```

#Import JSON

```{r}
trout     <- fromJSON("data/TROUT.json")
filah     <- fromJSON("data/FILAH.json")
journalist<- fromJSON("data/journalist.json")
```

#Extract Node

```{r}
trout_nodes  <- as_tibble(trout$nodes)
trout_edges  <- as_tibble(trout$links)
filah_nodes  <- as_tibble(filah$nodes)
filah_edges  <- as_tibble(filah$links)
jour_nodes   <- as_tibble(journalist$nodes)
jour_edges   <- as_tibble(journalist$links)
```

# Peak

```{r}
peek_graph <- function(g, name) {
  cat("\n---", toupper(name), "STRUCTURE ---\n")
  str(g, max.level = 1)
  
  cat("\nFirst 5", name, "nodes:\n")
  g$nodes %>%
    as_tibble() %>%
    slice_head(n = 5) %>%          
    glimpse()

  cat("\nFirst 5", name, "links:\n")
  g$links %>%
    as_tibble() %>%
    slice_head(n = 5) %>%          
    glimpse()
}

# Now peek at each dataset
peek_graph(trout,      "TROUT")
peek_graph(filah,      "FILAH")
peek_graph(journalist, "JOURNALIST")

```

# Smart EDA on raw

```{r}
ExpCatViz(trout_nodes); ExpNumViz(trout_nodes)
ExpCatViz(trout_edges); ExpNumViz(trout_edges)
ExpCatViz(filah_nodes); ExpNumViz(filah_nodes)
ExpCatViz(filah_edges); ExpNumViz(filah_edges)
ExpCatViz(jour_nodes);  ExpNumViz(jour_nodes)
ExpCatViz(jour_edges);  ExpNumViz(jour_edges)
```

# Clean edge Table

```{r}
drop_list_cols <- function(df) select(df, where(~!is.list(.)))
trout_edges_clean <- trout_edges  %>% drop_list_cols()
filah_edges_clean <- filah_edges  %>% drop_list_cols()
jour_edges_clean  <- jour_edges   %>% drop_list_cols()
```

# Merge Nodes

```{r}
combined_nodes <- bind_rows(
  trout_nodes  %>% mutate(source="TROUT"),
  filah_nodes  %>% mutate(source="FILAH"),
  jour_nodes   %>% mutate(source="JOURNALIST")
) %>% distinct(id, .keep_all=TRUE)
```

# Merge Edges

```{r}
combined_edges <- bind_rows(
  trout_edges_clean  %>% mutate(source_dataset = "TROUT"),
  filah_edges_clean  %>% mutate(source_dataset = "FILAH"),
  jour_edges_clean   %>% mutate(source_dataset = "JOURNALIST")
) %>%
  rename(from = source, to = target) %>%
  filter(from %in% combined_nodes$id, to %in% combined_nodes$id)

```

# Build Combined Graph

```{r}
# Filter out edges whose endpoints aren’t in the node list
combined_edges <- combined_edges %>%
  filter(
    from %in% combined_nodes$id,
    to   %in% combined_nodes$id
  )

#Construct the tidygraph object
combined_graph <- tbl_graph(
  nodes    = combined_nodes,
  edges    = combined_edges,
  directed = TRUE,
  node_key = "id"
)
```

# Question 1

## Bias Computation

```{r}
# Step 10: Helper to compute average sentiment (“bias”) per person
compute_bias <- function(nodes, edges) {
  # 1. Identify person nodes
  people <- nodes %>%
    filter(type == "entity.person") %>%
    select(person = id, name)

  # 2. Keep only edges with valid numeric sentiment
  edges2 <- edges %>%
    filter(!is.na(sentiment)) %>%
    mutate(sentiment = as.numeric(sentiment))

  # 3. Pivot both endpoints into one column
  sent_long <- edges2 %>%
    pivot_longer(
      cols      = c(from, to),
      names_to  = "endpoint",
      values_to = "person"
    ) %>%
    filter(person %in% people$person)

  # 4. Compute mean sentiment and count per person
  sent_long %>%
    group_by(person) %>%
    summarise(
      n_edges  = n(),
      bias_avg = mean(sentiment),
      .groups  = "drop"
    ) %>%
    left_join(people, by = "person")
}
```

## Compute bias scores for TROUT and FILAH

```{r}
# Step 11a: Prepare per‐source edges with from/to naming
trout_edges_bias <- trout_edges_clean  %>% rename(from = source, to = target)
filah_edges_bias <- filah_edges_clean  %>% rename(from = source, to = target)

# Step 11: Compute per-member bias in each advocacy dataset
trout_bias <- compute_bias(trout_nodes, trout_edges_bias)
filah_bias <- compute_bias(filah_nodes, filah_edges_bias)

# Quick peek at the results
trout_bias %>% slice_max(order_by = bias_avg, n = 5)
filah_bias %>% slice_min(order_by = bias_avg, n = 5)


```

## Visualise the distribution of bias scores

### density plot

```{r}
# Step 12: Distribution of member bias in each dataset
library(ggplot2)

# Combine for plotting
bias_all <- bind_rows(
  trout_bias %>% mutate(dataset = "TROUT"),
  filah_bias %>% mutate(dataset = "FILAH")
)

ggplot(bias_all, aes(x = bias_avg, fill = dataset)) +
  geom_density(alpha = 0.6) +
  scale_x_continuous(limits = c(-1, 1)) +
  scale_fill_manual(values = c(TROUT = "#1f78b4", FILAH = "#33a02c")) +
  labs(
    title = "Distribution of COOTEFOO Member Bias in TROUT vs FILAH",
    x     = "Average sentiment (–1 = fishing bias, +1 = tourism bias)",
    y     = "Density",
    fill  = "Dataset"
  ) +
  theme_minimal()
```

### Highlight the Top ±5 Most Extreme Members

```{r}
# Step 13: Bar charts of top ±5 extremes

library(forcats)

# Helper to extract extremes
top_extremes <- function(df, n = 5) {
  df %>%
    arrange(desc(bias_avg)) %>% slice_head(n = n) %>%
    bind_rows(df %>% arrange(bias_avg) %>% slice_head(n = n)) %>%
    mutate(direction = if_else(bias_avg > 0, "Tourism", "Fishing"))
}

# Plot function
plot_extremes <- function(df, title, fill_vals) {
  df %>%
    mutate(name = fct_reorder(name, bias_avg)) %>%
    ggplot(aes(x = name, y = bias_avg, fill = direction)) +
    geom_col() +
    coord_flip() +
    scale_y_continuous(limits = c(-1, 1)) +
    scale_fill_manual(values = fill_vals) +
    labs(title = title, x = "Member", y = "Average sentiment") +
    theme_light() +
    theme(legend.position = "none")
}
```

### TROUT Extreme

```{r}
plot_extremes(
  top_extremes(trout_bias),
  title     = "TROUT: Top ±5 Member Biases",
  fill_vals = c(Tourism = "#e31a1c", Fishing = "#348ABD")
)
```

### FILAH Extreme

```{r}
plot_extremes(
  top_extremes(filah_bias),
  title     = "FILAH: Top ±5 Member Biases",
  fill_vals = c(Tourism = "#e31a1c", Fishing = "#348ABD")
)
```

**Both advocacy datasets skew positive**

-   The density plots show TROUT’s bias scores clustered around +0.3 – +0.8 and FILAH’s around +0.4 – +0.9.

-   Neither set contains a sizeable fishing-leaning (negative) mass.

**Top ±5 extremes are almost all tourism**

-   TROUT’s strongest voices—Ed Helpsford and Teddy Goldstein—both score near +0.9; only Seal dips modestly below zero.

-   FILAH’s top advocates—Simone Kat (+0.95) and Carol Limpet (+0.65)—are likewise almost purely tourism-focused; again only Seal shows any slight fishing bias.

**Accusations unsupported by their own data**

-   TROUT’s claim of fishing-industry favoritism is contradicted: their own records are overwhelmingly pro-tourism.

-   FILAH’s charge of anti-fishing bias similarly finds no support: their dataset also tilts strongly toward tourism.

# Question 2

## Compute centrality & community

```{r}
#── Q2.1 Build combined nodes & edges ────────────────────────────────────────────
combined_nodes <- bind_rows(
  trout_nodes  %>% mutate(source_dataset = "TROUT"),
  filah_nodes  %>% mutate(source_dataset = "FILAH"),
  jour_nodes   %>% mutate(source_dataset = "JOURNALIST")
) %>% distinct(id, .keep_all = TRUE)

combined_edges <- bind_rows(
  trout_edges_clean  %>% mutate(source_dataset = "TROUT"),
  filah_edges_clean  %>% mutate(source_dataset = "FILAH"),
  jour_edges_clean   %>% mutate(source_dataset = "JOURNALIST")
) %>%
  rename(from = source, to = target) %>%
  filter(from %in% combined_nodes$id, to %in% combined_nodes$id)

```

```{r}
#── Q2.2 Build graph & compute metrics (incl. bias) ─────────────────────────────
library(tidygraph)
library(dplyr)
library(tidyr)

# Helper to compute bias_avg per node
bias_lookup <- compute_bias(combined_nodes, combined_edges)

combined_graph <- tbl_graph(
  nodes    = combined_nodes,
  edges    = combined_edges,
  directed = TRUE,
  node_key = "id"
) %>%
  activate(nodes) %>%
  left_join(bias_lookup %>% select(person, bias_avg), by = c("id" = "person")) %>%
  mutate(
    degree   = centrality_degree(mode = "all"),
    cluster  = group_infomap(),               
    bias_cat = if_else(bias_avg >= 0, "tourism", "fishing")
  )

```

```{r}
#── Q2.3 Plot distribution of combined bias ──────────────────────────────────────
library(ggplot2)

ggplot(bias_lookup, aes(x = bias_avg)) +
  geom_density(fill = "#66c2a5", alpha = 0.6) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  labs(
    title = "Bias Scores Across the Full COOTEFOO Dataset",
    x     = "Average sentiment (–1=fishing, +1=tourism)",
    y     = "Density"
  ) +
  theme_minimal()

```

```{r}
set.seed(42)
ggraph(combined_graph, layout = "fr") +
  geom_edge_link(aes(colour = source_dataset), alpha = 0.3) +
  geom_node_point(aes(size = degree, colour = bias_cat), alpha = 0.8) +
  geom_node_text(aes(label = name), repel = TRUE, size = 2) +
  scale_edge_colour_manual(values = c(
    TROUT      = "#1f78b4",
    FILAH      = "#33a02c",
    JOURNALIST = "#e31a1c"
  )) +
  scale_colour_manual(
    values      = c(fishing = "#348ABD", tourism = "#E24A33"),
    na.value    = "grey80",
    na.translate= FALSE
  ) +
  scale_size(range = c(2, 8)) +
  labs(
    title       = "Combined COOTEFOO Network",
    edge_colour = "Record Source",
    colour      = "Member Bias",
    size        = "Node Degree"
  ) +
  theme_void()

```

When we merge TROUT, FILAH and the journalist’s extra records into a single knowledge graph and examine both the bias‐score density and the force-directed network, we see:

**Strong Pro-Tourism Bias Across the Board**

-   The density of combined bias scores lies almost entirely above zero (−1 = fishing, +1 = tourism), peaking around +0.6–+0.8.

-   This confirms that, in the full dataset, the committee as a whole spends far more time on tourism-related activities than on fishing.

**Centralisation of Tourism-Leaning Members**

-   In the network layout, the largest nodes (highest degree) are predominantly tourism-leaning (red).

-   These core actors drive the majority of meetings, site visits and plans, indicating they set the agenda.

**Peripheral Fishing Voices**

-   Fishing-leaning members (blue) appear only on the fringes, with low degree and few connections.

-   Seal remains the principal fishing advocate but is marginalised in the overall network.

**Unified Record Sources**

-   TROUT and FILAH edges (blue and green) overlap heavily, and the journalist’s supplemental edges (red) fill in gaps but still tie into the same tourism-centred core.

-   There are no distinct sub-communities of fishing activity; all sources reinforce the tourism cluster.

# Question 3

## Comparison Table of Bias Score

```{r}
library(dplyr)

bias_comparison <- trout_bias %>% 
  select(person, bias_trout = bias_avg) %>%
  full_join(
    filah_bias %>% select(person, bias_filah = bias_avg),
    by = "person"
  ) %>%
  full_join(
    bias_lookup %>% select(person, bias_combined = bias_avg),
    by = "person"
  ) %>%
  # attach human‐readable names
  left_join(
    combined_nodes %>% 
      filter(type == "entity.person") %>% 
      select(person = id, name),
    by = "person"
  ) %>%
  filter(!is.na(name))
```

## Visualise shifts with a “dumbbell” chart

```{r}
library(ggplot2)
library(forcats)

# Prepare for TROUT comparison
dumbbell_trout <- bias_comparison %>%
  filter(!is.na(bias_trout)) %>%
  select(name, Original = bias_trout, Combined = bias_combined) %>%
  arrange(Original) %>%
  mutate(name = factor(name, levels = name)) %>%
  pivot_longer(c(Original, Combined), 
               names_to = "Dataset", values_to = "Bias")

# Plot
ggplot(dumbbell_trout, aes(y = name, x = Bias, colour = Dataset)) +
  geom_line(aes(group = name), colour = "grey70") +
  geom_point(size = 3) +
  scale_colour_manual(values = c(Original = "#1f78b4", Combined = "#33a02c")) +
  labs(
    title = "TROUT Bias: Original vs Combined",
    x     = "Average sentiment (–1 = fishing, +1 = tourism)",
    y     = "Member",
    colour= ""
  ) +
  theme_minimal()
```

## Summary

```{r}
bias_comparison %>%
  filter(!is.na(bias_trout)) %>%
  transmute(
    Member      = name,
    `Original (TROUT)`  = round(bias_trout, 3),
    `Combined`          = round(bias_combined, 3),
    `Delta`             = round(bias_combined - bias_trout, 3)
  ) %>%
  arrange(desc(Delta)) %>%
  knitr::kable(digits = 3)
```

### Insights

When we compare each member’s original bias in TROUT (and likewise in FILAH) to their bias in the fully combined dataset, we find no change:

-   Every member’s “Combined” score is exactly the same as their “Original” score—∆ = 0.

**Conclusion:**

Adding the journalist’s extra records neither strengthens nor weakens TROUT’s (or FILAH’s) original accusations. In all cases the fuller dataset leaves each member’s measured bias unchanged, so those initial claims are unchanged when viewed in context of the complete data.

# Question 4

## Prepare the nodes & edges for visNetwork

```{r}
#–– 4.1 Data Prep 

# First, join bias_avg into combined_nodes so each row has its own bias
nodes_vn <- combined_nodes %>%
  # 1. bring in bias_lookup cleanly
  left_join(
    bias_lookup %>% select(person, bias_avg),
    by = c("id" = "person")
  ) %>%
  # 2. then transmute
  transmute(
    id    = id,
    label = coalesce(name, id),
    group = if_else(type == "entity.person", "Member", "Event"),
    title = if_else(
      group == "Member",
      paste0("<b>", label, "</b><br>Bias: ", round(bias_avg, 2)),
      label
    )
  )

# And edges_vn as before
edges_vn <- combined_edges %>%
  group_by(from, to, source_dataset) %>%
  summarise(weight = n(), .groups = "drop") %>%
  filter(from != to) %>%
  mutate(
    color = case_when(
      source_dataset == "TROUT"      ~ "#1f78b4",
      source_dataset == "FILAH"      ~ "#33a02c",
      source_dataset == "JOURNALIST" ~ "#e31a1c",
      TRUE                            ~ "grey80"
    ),
    title = paste0(source_dataset, " (n=", weight, ")")
  ) %>%
  select(from, to, weight, color, title)

```

```{r}
#–– 4.2 Working with layout -------------------------------------------

library(visNetwork)

visNetwork(nodes_vn, edges_vn, height = "600px", width = "100%") %>%
  visIgraphLayout(layout = "layout_with_fr")
```

```{r}
visNetwork(nodes_vn, edges_vn) %>%
  # force‐directed layout via igraph
  visIgraphLayout(layout = "layout_with_fr") %>%
  # auto‐colour by `group`, no need to override colour
  # add legend for those groups
  visLegend() %>%
  # freeze the layout
  visLayout(randomSeed = 123)

```

```{r}
#–– 4.4 Working with visual attributes – Edges ------------------------
visNetwork(nodes_vn, edges_vn) %>%
  visIgraphLayout(layout = "layout_with_fr") %>%
  # draw arrowheads and smooth the curves
  visEdges(
    arrows = "to",
    smooth = list(enabled = TRUE, type = "curvedCW")
  ) %>%
  # legend for your edge‐colour mapping (if you manually set edge colors)
  visLegend() %>%
  visLayout(randomSeed = 123)


```

```{r}
#–– 4.5 Interactivity --------------------------------------------------
member_ids <- nodes_vn %>% 
  filter(group == "Member") %>% 
  pull(id)

visNetwork(nodes_vn, edges_vn) %>%
  visIgraphLayout(layout = "layout_with_fr") %>%
  visOptions(
    highlightNearest   = list(enabled = TRUE, degree = 1, hover = TRUE),
    nodesIdSelection   = list(
      enabled   = TRUE,
      useLabels = TRUE,
      values    = member_ids,
      main      = "Select a COOTEFOO member"
    )
  ) %>%
  visLegend(
    addNodes = data.frame(
      label = c("TROUT", "FILAH", "JOURNALIST"),
      shape = "square",
      color = c("#1f78b4", "#33a02c", "#e31a1c"),
      stringsAsFactors = FALSE
    ),
    useGroups = FALSE
  ) %>%
  visLayout(randomSeed = 42)

```

```{r}
#── P1: Records‐per‐Source Bar Chart ──────────────────────────────────

library(dplyr)
library(ggplot2)

seal_summary <- combined_edges %>%
  filter(from == "Seal" | to == "Seal") %>%
  count(source_dataset, name = "n") %>%
  complete(source_dataset = c("TROUT","FILAH","JOURNALIST"), fill = list(n=0))

ggplot(seal_summary, aes(x = source_dataset, y = n, fill = source_dataset)) +
  geom_col() +
  scale_fill_manual(values = c(
    TROUT      = "#1f78b4",
    FILAH      = "#33a02c",
    JOURNALIST = "#e31a1c"
  )) +
  labs(
    title = "Seal: Records per Source",
    x     = "Dataset",
    y     = "Count"
  ) +
  theme_minimal() +
  theme(legend.position = "none")

```

```{r}
#── P2: Seal’s 1‐Step Ego‐Network ────────────────────────────────────

library(tidygraph)
library(ggraph)
library(igraph)
library(ggplot2)

# build the ego‐edge table
seal_edges <- combined_edges %>%
  filter(from == "Seal" | to == "Seal") %>%
  count(from, to, source_dataset, name = "weight")

# build the ego‐node table
seal_nodes <- tibble(id = unique(c(seal_edges$from, seal_edges$to))) %>%
  left_join(combined_nodes %>% select(id, name), by = "id") %>%
  transmute(
    id,
    label = coalesce(name, id),
    type  = if_else(id == "Seal", "Selected", "Neighbour")
  )

# create the graph
seal_graph <- tbl_graph(nodes = seal_nodes, edges = seal_edges, directed = TRUE)

# plot
set.seed(2025)
ggraph(seal_graph, layout = "star") +
  geom_edge_link(aes(width = weight, colour = source_dataset),
                 alpha = 0.8,
                 arrow = arrow(type = "closed", length = unit(2, "mm"))) +
  scale_edge_width(range = c(0.2, 1.5), guide = guide_legend("Count")) +
  scale_edge_colour_manual(name = "Record Source", values = c(
    TROUT      = "#1f78b4",
    FILAH      = "#33a02c",
    JOURNALIST = "#e31a1c"
  )) +
  geom_node_point(aes(fill = type), shape = 21, size = 6, colour = "black") +
  scale_fill_manual(values = c(Selected = "firebrick", Neighbour = "steelblue"),
                    guide = FALSE) +
  geom_node_text(aes(filter = (id == "Seal"), label = label),
                 repel = TRUE, fontface = "bold", size = 4) +
  theme_void() +
  labs(title = "Seal’s Ego-Network")
```

Insight

By examining Seal’s activity through both a count plot and a ego-network, we see that TROUT’s dataset captures only a small fraction of his true engagements. TROUT recorded roughly **13** of Seal’s **79** total events, whereas FILAH and the independent journalist each logged **≈ 66**. Visually, Seal’s ego-network fans out almost completely in green (FILAH) and red (journalist) spokes, with only a thin blue wedge for TROUT. Thus, any characterisation of Seal’s “bias” or level of involvement based solely on TROUT’s data is severely misleading; the fuller, combined record reveals a far more active and tourism-focused set of activities than TROUT alone would suggest.

# Conclusion

-   Looking at only TROUT or only FILAH data gives a very skewed picture of what COOTEFOO members actually do.

-   When we combine both groups’ records with the journalist’s extra data, it’s clear most committee work is about tourism, not fishing.

-   Comparing each member’s “bias” before and after adding the extra data shows the original accusations never become stronger, they stay the same or get weaker.

-   Focusing on Seal as an example, TROUT captured just 13 of his 79 activities, while FILAH and the journalist each logged about 66. That big gap shows how missing data can totally change our view.

-   In short, you must look at all the records together to understand COOTEFOO’s real behaviour, any single data source on its own is misleading.
